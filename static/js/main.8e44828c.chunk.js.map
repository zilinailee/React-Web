{"version":3,"sources":["logo.svg","Screens/Home.js","Screens/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Link","props","Text","accessibilityRole","style","StyleSheet","compose","styles","link","create","app","marginHorizontal","maxWidth","logo","height","header","padding","title","fontWeight","fontSize","marginVertical","textAlign","text","lineHeight","color","code","fontFamily","App","View","Image","accessibilityLabel","source","uri","resizeMode","href","Button","onPress","useState","msg","setMsg","useEffect","document","addEventListener","event","data","window","onClick","ReactNativeWebView","postMessage","BasicExample","to","exact","path","Home","Profile","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mQAAe,MAA0B,iC,eCMzC,SAASA,EAAKC,GACZ,OACE,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,kBAAkB,OAClBC,MAAOC,IAAWC,QAAQC,EAAOC,KAAMP,EAAMG,UAuCnD,IAAMG,EAASF,IAAWI,OAAO,CAC/BC,IAAK,CACHC,iBAAkB,OAClBC,SAAU,KAEZC,KAAM,CACJC,OAAQ,IAEVC,OAAQ,CACNC,QAAS,IAEXC,MAAO,CACLC,WAAY,OACZC,SAAU,SACVC,eAAgB,MAChBC,UAAW,UAEbC,KAAM,CACJC,WAAY,QACZJ,SAAU,WACVC,eAAgB,MAChBC,UAAW,UAEbb,KAAM,CACJgB,MAAO,WAETC,KAAM,CACJC,WAAY,0BAIDC,EAjEf,WACE,OACE,eAACC,EAAA,EAAD,CAAMxB,MAAOG,EAAOG,IAApB,UACE,eAACkB,EAAA,EAAD,CAAMxB,MAAOG,EAAOQ,OAApB,UACE,cAACc,EAAA,EAAD,CACEC,mBAAmB,aACnBC,OAAQ,CAAEC,IAAKnB,GACfoB,WAAW,UACX7B,MAAOG,EAAOM,OAEhB,cAACX,EAAA,EAAD,CAAME,MAAOG,EAAOU,MAApB,qCAEF,eAACf,EAAA,EAAD,CAAME,MAAOG,EAAOe,KAApB,oDAC0C,IACxC,cAACtB,EAAD,CAAMkC,KAAK,+CAAX,8BAEQ,IAJV,MAKM,IACJ,cAAClC,EAAD,CAAMkC,KAAK,8CAAX,qCAIF,eAAChC,EAAA,EAAD,CAAME,MAAOG,EAAOe,KAApB,iCACuB,IACrB,cAACtB,EAAD,CAAMkC,KAAK,uCAAuC9B,MAAOG,EAAOkB,KAAhE,wBAFF,OAOA,cAACU,EAAA,EAAD,CAAQC,QAAS,aAAUnB,MAAM,uB,QCfxBU,MA5Bf,WAAgB,IAAD,EAESU,mBAAS,IAFlB,mBAENC,EAFM,KAEDC,EAFC,KAab,OATAC,qBAAU,WACRC,SAASC,iBAAiB,WAAW,SAAAC,GACnCJ,EAAOI,EAAMC,SAEfC,OAAOH,iBAAiB,WAAW,SAAAC,GACjCJ,EAAOI,EAAMC,WAEd,IAGD,gCACI,yCAAYN,KAEZ,wBACEQ,QAAS,WACPD,OAAOE,mBAAmBC,YAAY,oCAF1C,sDCAO,SAASC,IACtB,OACE,cAAC,IAAD,UACE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,aAAT,4BAIJ,uBASA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,WAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,aAAZ,SACE,cAACG,EAAD,cAWZ,SAASA,IACP,OACE,8BACE,mDClEN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,SAM1BZ,M","file":"static/js/main.8e44828c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Button, Image, StyleSheet, Text, View } from \"react-native\";\nimport logo from '../logo.svg';\nimport '../App.css';\n\n\nfunction Link(props) {\n  return (\n    <Text\n      {...props}\n      accessibilityRole=\"link\"\n      style={StyleSheet.compose(styles.link, props.style)}\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <View style={styles.app}>\n      <View style={styles.header}>\n        <Image\n          accessibilityLabel=\"React logo\"\n          source={{ uri: logo }}\n          resizeMode=\"contain\"\n          style={styles.logo}\n        />\n        <Text style={styles.title}>React Native for Web</Text>\n      </View>\n      <Text style={styles.text}>\n        This is an example of an app built with{\" \"}\n        <Link href=\"https://github.com/facebook/create-react-app\">\n          Create React App\n        </Link>{\" \"}\n        and{\" \"}\n        <Link href=\"https://github.com/necolas/react-native-web\">\n          React Native for Web\n        </Link>\n      </Text>\n      <Text style={styles.text}>\n        To get started, edit{\" \"}\n        <Link href=\"https://codesandbox.io/s/q4qymyp2l6/\" style={styles.code}>\n          src/App.js\n        </Link>\n        .\n      </Text>\n      <Button onPress={() => {}} title=\"Example button\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  app: {\n    marginHorizontal: \"auto\",\n    maxWidth: 500\n  },\n  logo: {\n    height: 80\n  },\n  header: {\n    padding: 20\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginVertical: \"1em\",\n    textAlign: \"center\"\n  },\n  text: {\n    lineHeight: \"1.5em\",\n    fontSize: \"1.125rem\",\n    marginVertical: \"1em\",\n    textAlign: \"center\"\n  },\n  link: {\n    color: \"#1B95E0\"\n  },\n  code: {\n    fontFamily: \"monospace, monospace\"\n  }\n});\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [msg, setMsg] = useState('');\n\n  useEffect(() => {\n    document.addEventListener(\"message\", event => {\n      setMsg(event.data)\n    });\n    window.addEventListener(\"message\", event => {\n      setMsg(event.data)\n    });\n  }, []);\n\n  return (\n    <div>\n        <div>Web3: {msg}</div>\n\n        <button\n          onClick={() => {\n            window.ReactNativeWebView.postMessage(\"Post message from web to Mobile\");\n          }}\n        >\n          Send Message To React Native(Mobile)\n        </button>\n      </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './Screens/Home';\nimport Profile from './Screens/Profile';\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function BasicExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/profile\">Profile</Link>\n          </li>\n          <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\nfunction Dashboard() {\n  return (\n    <div>\n      <h2>Dashboard Hello</h2>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}